{"version":3,"sources":["script.js"],"names":["document","addEventListener","cartCount","cartCountElement","getElementById","addToCartButtons","querySelectorAll","cartIcon","querySelector","animationContainer","forEach","button","event","textContent","productImage","closest","imageClone","cloneNode","classList","add","appendChild","cartIconRect","getBoundingClientRect","buttonRect","style","top","left","offsetWidth","transform","opacity","remove"],"mappings":";;AAAAA,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8C,YAAW;AACrD,MAAIC,SAAS,GAAG,CAAhB;AACA,MAAMC,gBAAgB,GAAGH,QAAQ,CAACI,cAAT,CAAwB,YAAxB,CAAzB;AACA,MAAMC,gBAAgB,GAAGL,QAAQ,CAACM,gBAAT,CAA0B,qBAA1B,CAAzB;AACA,MAAMC,QAAQ,GAAGP,QAAQ,CAACQ,aAAT,CAAuB,YAAvB,CAAjB;AACA,MAAMC,kBAAkB,GAAGT,QAAQ,CAACI,cAAT,CAAwB,qBAAxB,CAA3B;AAEAC,EAAAA,gBAAgB,CAACK,OAAjB,CAAyB,UAAAC,MAAM,EAAI;AAC/BA,IAAAA,MAAM,CAACV,gBAAP,CAAwB,OAAxB,EAAiC,UAASW,KAAT,EAAgB;AAC7CV,MAAAA,SAAS;AACTC,MAAAA,gBAAgB,CAACU,WAAjB,GAA+BX,SAA/B,CAF6C,CAI7C;;AACA,UAAMY,YAAY,GAAGH,MAAM,CAACI,OAAP,CAAe,OAAf,EAAwBP,aAAxB,CAAsC,gBAAtC,CAArB;AACA,UAAMQ,UAAU,GAAGF,YAAY,CAACG,SAAb,CAAuB,IAAvB,CAAnB;AACAD,MAAAA,UAAU,CAACE,SAAX,CAAqBC,GAArB,CAAyB,qBAAzB,EAP6C,CAS7C;;AACAV,MAAAA,kBAAkB,CAACW,WAAnB,CAA+BJ,UAA/B,EAV6C,CAY7C;;AACA,UAAMK,YAAY,GAAGd,QAAQ,CAACe,qBAAT,EAArB;AACA,UAAMC,UAAU,GAAGZ,MAAM,CAACW,qBAAP,EAAnB,CAd6C,CAgB7C;;AACAN,MAAAA,UAAU,CAACQ,KAAX,CAAiBC,GAAjB,aAA0BF,UAAU,CAACE,GAArC;AACAT,MAAAA,UAAU,CAACQ,KAAX,CAAiBE,IAAjB,aAA2BH,UAAU,CAACG,IAAtC,QAlB6C,CAoB7C;;AACAV,MAAAA,UAAU,CAACW,WAAX,CArB6C,CAuB7C;;AACAX,MAAAA,UAAU,CAACQ,KAAX,CAAiBI,SAAjB,uBAA0CP,YAAY,CAACK,IAAb,GAAoBH,UAAU,CAACG,IAAzE,iBAAoFL,YAAY,CAACI,GAAb,GAAmBF,UAAU,CAACE,GAAlH;AACAT,MAAAA,UAAU,CAACQ,KAAX,CAAiBK,OAAjB,GAA2B,GAA3B,CAzB6C,CA2B7C;;AACAb,MAAAA,UAAU,CAACf,gBAAX,CAA4B,eAA5B,EAA6C,YAAM;AAC/Ce,QAAAA,UAAU,CAACc,MAAX;AACH,OAFD;AAGH,KA/BD;AAgCH,GAjCD;AAkCH,CAzCD","sourcesContent":["document.addEventListener('DOMContentLoaded', function() {\r\n    let cartCount = 0;\r\n    const cartCountElement = document.getElementById('cart-count');\r\n    const addToCartButtons = document.querySelectorAll('.add-to-cart-button');\r\n    const cartIcon = document.querySelector('.cart-icon');\r\n    const animationContainer = document.getElementById('animation-container');\r\n\r\n    addToCartButtons.forEach(button => {\r\n        button.addEventListener('click', function(event) {\r\n            cartCount++;\r\n            cartCountElement.textContent = cartCount;\r\n\r\n            // Create a clone of the product image\r\n            const productImage = button.closest('.item').querySelector('.product-image');\r\n            const imageClone = productImage.cloneNode(true);\r\n            imageClone.classList.add('cart-item-animation');\r\n\r\n            // Append the clone to the animation container\r\n            animationContainer.appendChild(imageClone);\r\n\r\n            // Get the position of the cart icon and the button\r\n            const cartIconRect = cartIcon.getBoundingClientRect();\r\n            const buttonRect = button.getBoundingClientRect();\r\n\r\n            // Set the initial position of the clone\r\n            imageClone.style.top = `${buttonRect.top}px`;\r\n            imageClone.style.left = `${buttonRect.left}px`;\r\n\r\n            // Force reflow to ensure the animation starts correctly\r\n            imageClone.offsetWidth;\r\n\r\n            // Set the final position of the clone (cart icon position)\r\n            imageClone.style.transform = `translate(${cartIconRect.left - buttonRect.left}px, ${cartIconRect.top - buttonRect.top}px) scale(0.2)`;\r\n            imageClone.style.opacity = '0';\r\n\r\n            // Remove the clone after the animation is done\r\n            imageClone.addEventListener('transitionend', () => {\r\n                imageClone.remove();\r\n            });\r\n        });\r\n    });\r\n});\r\n"],"file":"script.dev.js"}